<?xml version="1.0" encoding="UTF-8"?>
<!--(C) EIOPA - XBRL Taxonomy-->
<?officialURI http://eiopa.europa.eu/eu/xbrl/func/lei-check.xml?>
<?taxonomy-version 2.4.0?>
<?taxonomy-date 2019-07-15?>
<link:linkbase xmlns:cfi="http://xbrl.org/2010/custom-function" xmlns:generic="http://xbrl.org/2008/generic" xmlns:lei-fn="http://eiopa.europa.eu/xbrl/ext/lei/function" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:variable="http://xbrl.org/2008/variable" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd                       http://xbrl.org/2008/generic http://www.xbrl.org/2008/generic-link.xsd                       http://xbrl.org/2008/variable http://www.xbrl.org/2008/variable.xsd                       http://xbrl.org/2010/custom-function http://www.xbrl.org/2010/custom-function-implementation.xsd">
  <link:roleRef roleURI="http://www.xbrl.org/2008/role/link" xlink:href="http://www.xbrl.org/2008/generic-link.xsd#standard-link-role" xlink:type="simple" />
  <link:roleRef roleURI="http://www.xbrl.org/2008/role/label" xlink:href="http://www.xbrl.org/2008/generic-label.xsd#standard-label" xlink:type="simple" />
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2008/variable-set" xlink:href="http://www.xbrl.org/2008/variable.xsd#variable-set" xlink:type="simple" />
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/function-implementation" xlink:href="http://www.xbrl.org/2010/custom-function-implementation.xsd#cfi-implementation" xlink:type="simple" />
  <generic:link xlink:role="http://www.xbrl.org/2003/role/link" xlink:type="extended">
    <variable:function name="lei-fn:validate-format" output="xs:boolean" xlink:label="function1" xlink:type="resource">
      <variable:input type="xs:string" />
    </variable:function>
    <cfi:implementation xlink:label="functionImplementation1" xlink:type="resource">
      <cfi:input name="s" />
      <cfi:output>matches( $s , '^[A-Z0-9]{18}[0-9]{2}$' )</cfi:output>
    </cfi:implementation>
    <generic:arc xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="function1" xlink:to="functionImplementation1" xlink:type="arc" />
    <variable:function name="lei-fn:identifier-scheme" output="xs:anyURI" xlink:label="function2" xlink:type="resource" />
    <cfi:implementation xlink:label="functionImplementation2" xlink:type="resource">
      <cfi:output>xs:anyURI( 'http://standards.iso.org/iso/17442' )</cfi:output>
    </cfi:implementation>
    <generic:arc xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="function2" xlink:to="functionImplementation2" xlink:type="arc" />
    <!--Break LEI into chunks of 13 digits, so we only every deal with 13 +
            2 = 15 digit numbers, which is guaranteed to fit into a 64-bit implementation
            of xs:integer (which is the minimum required)-->
    <variable:function name="lei-fn:_checksum-97-10" output="xs:integer" xlink:label="function3" xlink:type="resource">
      <variable:input type="xs:string" />
    </variable:function>
    <cfi:implementation xlink:label="functionImplementation3" xlink:type="resource">
      <cfi:input name="s" />
      <cfi:output>( if ( string-length( $s ) &gt; 13 ) then 10000000000000 * lei-fn:_checksum-97-10( substring( $s , 1 , string-length( $s ) - 13 ) ) + xs:integer( substring( $s , string-length( $s ) +1 - 13 , 13 ) ) else xs:integer( substring( $s , 1 , string-length( $s ) ) ) ) mod 97</cfi:output>
    </cfi:implementation>
    <generic:arc xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="function3" xlink:to="functionImplementation3" xlink:type="arc" />
    <!--If the LEI isn't format-valid then don't also raise a checksum error-->
    <!--00, 01 and 99 are never valid check digits because 02 <= (98 - (X mod 97)) <= 98 for all X.-->
    <variable:function name="lei-fn:validate-checksum" output="xs:boolean" xlink:label="function4" xlink:type="resource">
      <variable:input type="xs:string" />
    </variable:function>
    <cfi:implementation xlink:label="functionImplementation4" xlink:type="resource">
      <cfi:input name="s" />
      <cfi:output>not( lei-fn:validate-format( $s ) ) or ( lei-fn:_checksum-97-10( string-join( ( for $c in string-to-codepoints( $s ) return xs:string( if ( $c &lt;= 57 ) then $c - 48 else $c - 55 ) ) , '' ) ) = 1 and not( matches( $s , "(00|01|99)$" ) ) )</cfi:output>
    </cfi:implementation>
    <generic:arc xlink:arcrole="http://xbrl.org/arcrole/2010/function-implementation" xlink:from="function4" xlink:to="functionImplementation4" xlink:type="arc" />
  </generic:link>
</link:linkbase>